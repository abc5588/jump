- hosts: demo
  gather_facts: no
  tasks:
    - name: Test privileged account
      ansible.builtin.ping:

    - name: Push user
      ansible.builtin.user:
        name: "{{ account.username }}"
        shell: "{{ kwargs.shell }}"
        home: "{{ kwargs.home }}"
        groups: "{{ kwargs.groups }}"
        expires: -1
        state: present

    - name: Add group
      ansible.builtin.group:
        name: "{{ account.username }}"
        state: present

    - name: Check home dir exists
      ansible.builtin.stat:
        path: "{{ '/home/' + account.username }}"
      register: home_existed
      when: kwargs.home

    - name: Set home dir permission
      ansible.builtin.file:
        name: "{{ account.username }}"
        state: present
      register: home_existed
      when:
      - kwargs.home
      - home_existed.stat.exists == true

    - name: Push user password
      ansible.builtin.user:
        name: "{{ account.username }}"
        password: "{{ account.secret | password_hash('sha512') }}"
        update_password: always
      when: account.secret_type == "password"

    - name: remove jumpserver ssh key
      ansible.builtin.lineinfile:
        dest: "{{ kwargs.dest }}"
        regexp: "{{ kwargs.regexp }}"
        state: absent
      when:
        - account.secret_type == "ssh_key"
        - kwargs.strategy == "set_jms"

    - name: Push SSH key
      ansible.builtin.authorized_key:
        user: "{{ account.username }}"
        key: "{{ account.secret }}"
        exclusive: "{{ kwargs.exclusive }}"
      when: account.secret_type == "ssh_key"

    - name: Set sudo setting
      ansible.builtin.lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: ^{0} ALL=
        line: "{{ account.username + ' ALL=(ALL) NOPASSWD: ' + kwargs.sudo }}"
        validate: visudo -cf %s
      register: home_existed
      when:
        - kwargs.sudo

    - name: Refresh connection
      ansible.builtin.meta: reset_connection

    - name: Verify password
      ansible.builtin.ping:
      become: no
      vars:
        ansible_user: "{{ account.username }}"
        ansible_password: "{{ account.secret }}"
        ansible_become: no
      when: account.secret_type == "password"

    - name: Verify SSH key
      ansible.builtin.ping:
      become: no
      vars:
        ansible_user: "{{ account.username }}"
        ansible_ssh_private_key_file: "{{ account.private_key_path }}"
        ansible_become: no
      when: account.secret_type == "ssh_key"
