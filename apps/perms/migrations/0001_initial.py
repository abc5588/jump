# Generated by Django 3.2.14 on 2022-12-06 04:52

import uuid

import django.utils.timezone
from django.db import migrations, models

import assets.models.node
import common.utils.django


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('applications', '0002_remove_remoteapp_system_user'),
        ('assets', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationPermission',
            fields=[
                ('org_id',
                 models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('actions', models.IntegerField(
                    choices=[(255, 'All'), (1, 'Connect'), (2, 'Upload file'), (4, 'Download file'),
                             (6, 'Upload download'), (8, 'Clipboard copy'), (16, 'Clipboard paste'),
                             (24, 'Clipboard copy paste')], default=255, verbose_name='Actions')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('date_start',
                 models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Date start')),
                ('date_expired', models.DateTimeField(db_index=True, default=common.utils.django.date_expired_default,
                                                      verbose_name='Date expired')),
                ('created_by', models.CharField(blank=True, max_length=128, verbose_name='Created by')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('from_ticket', models.BooleanField(default=False, verbose_name='From ticket')),
                ('category',
                 models.CharField(choices=[('db', 'Database'), ('remote_app', 'Remote app'), ('cloud', 'Cloud')],
                                  max_length=16, verbose_name='Category')),
                ('type', models.CharField(choices=[('mysql', 'MySQL'), ('mariadb', 'MariaDB'), ('oracle', 'Oracle'),
                                                   ('postgresql', 'PostgreSQL'), ('sqlserver', 'SQLServer'),
                                                   ('redis', 'Redis'), ('mongodb', 'MongoDB'),
                                                   ('clickhouse', 'ClickHouse'), ('chrome', 'Chrome'),
                                                   ('mysql_workbench', 'MySQL Workbench'),
                                                   ('vmware_client', 'vSphere Client'), ('custom', 'Custom'),
                                                   ('k8s', 'Kubernetes')], max_length=16, verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Application permission',
                'ordering': ('name',),
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='AssetPermission',
            fields=[
                ('org_id',
                 models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('actions', models.IntegerField(
                    choices=[(255, 'All'), (1, 'Connect'), (2, 'Upload file'), (4, 'Download file'),
                             (6, 'Upload download'), (8, 'Clipboard copy'), (16, 'Clipboard paste'),
                             (24, 'Clipboard copy paste')], default=255, verbose_name='Actions')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('date_start',
                 models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Date start')),
                ('date_expired', models.DateTimeField(db_index=True, default=common.utils.django.date_expired_default,
                                                      verbose_name='Date expired')),
                ('created_by', models.CharField(blank=True, max_length=128, verbose_name='Created by')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('from_ticket', models.BooleanField(default=False, verbose_name='From ticket')),
            ],
            options={
                'verbose_name': 'Asset permission',
                'ordering': ('name',),
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='PermedApplication',
            fields=[
            ],
            options={
                'verbose_name': 'Permed application',
                'permissions': [('view_myapps', 'Can view my apps'), ('view_userapps', 'Can view user apps'),
                                ('view_usergroupapps', 'Can view usergroup apps')],
                'proxy': True,
                'default_permissions': [],
                'indexes': [],
                'constraints': [],
            },
            bases=('applications.application',),
        ),
        migrations.CreateModel(
            name='PermedAsset',
            fields=[
            ],
            options={
                'verbose_name': 'Permed asset',
                'permissions': [('view_myassets', 'Can view my assets'), ('view_userassets', 'Can view user assets'),
                                ('view_usergroupassets', 'Can view usergroup assets')],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('assets.asset',),
        ),
        migrations.CreateModel(
            name='PermNode',
            fields=[
            ],
            options={
                'ordering': [],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('assets.node',),
        ),
        migrations.CreateModel(
            name='UserAssetGrantedTreeNodeRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org_id',
                 models.CharField(blank=True, db_index=True, default='', max_length=36, verbose_name='Organization')),
                ('created_by', models.CharField(blank=True, max_length=32, null=True, verbose_name='Created by')),
                ('updated_by', models.CharField(blank=True, max_length=32, null=True, verbose_name='Updated by')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('node_key', models.CharField(db_index=True, max_length=64, verbose_name='Key')),
                ('node_parent_key',
                 models.CharField(db_index=True, default='', max_length=64, verbose_name='Parent key')),
                ('node_from', models.CharField(
                    choices=[('granted', 'Direct node granted'), ('child', 'Have children node'),
                             ('asset', 'Direct asset granted')], db_index=True, max_length=16)),
                ('node_assets_amount', models.IntegerField(default=0)),
                ('node',
                 models.ForeignKey(db_constraint=False, default=None, on_delete=django.db.models.deletion.CASCADE,
                                   related_name='granted_node_rels', to='assets.node')),
            ],
            options={
                'abstract': False,
            },
            bases=(assets.models.node.FamilyMixin, models.Model),
        ),
    ]
