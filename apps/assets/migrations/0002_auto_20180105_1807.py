# Generated by Django 3.2.14 on 2022-12-06 04:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import assets.models.asset


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('applications', '0003_auto_20191210_1659'),
        ('assets', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='systemuser',
            name='groups',
            field=models.ManyToManyField(blank=True, to='users.UserGroup', verbose_name='User groups'),
        ),
        migrations.AddField(
            model_name='systemuser',
            name='nodes',
            field=models.ManyToManyField(blank=True, to='assets.Node', verbose_name='Nodes'),
        ),
        migrations.AddField(
            model_name='systemuser',
            name='su_from',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='su_to',
                                    to='assets.systemuser', verbose_name='Switch from'),
        ),
        migrations.AddField(
            model_name='systemuser',
            name='users',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Users'),
        ),
        migrations.AlterUniqueTogether(
            name='label',
            unique_together={('name', 'value', 'org_id')},
        ),
        migrations.AddField(
            model_name='historicalauthbook',
            name='asset',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True,
                                    on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='assets.asset',
                                    verbose_name='Asset'),
        ),
        migrations.AddField(
            model_name='historicalauthbook',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalauthbook',
            name='systemuser',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True,
                                    on_delete=django.db.models.deletion.DO_NOTHING, related_name='+',
                                    to='assets.systemuser', verbose_name='System user'),
        ),
        migrations.AddField(
            model_name='gathereduser',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.asset',
                                    verbose_name='Asset'),
        ),
        migrations.AddField(
            model_name='gateway',
            name='domain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.domain',
                                    verbose_name='Domain'),
        ),
        migrations.AddField(
            model_name='favoriteasset',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.asset'),
        ),
        migrations.AddField(
            model_name='favoriteasset',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='domain',
            unique_together={('org_id', 'name')},
        ),
        migrations.AddField(
            model_name='commandfilterrule',
            name='filter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules',
                                    to='assets.commandfilter', verbose_name='Filter'),
        ),
        migrations.AddField(
            model_name='commandfilterrule',
            name='reviewers',
            field=models.ManyToManyField(blank=True, related_name='review_cmd_filter_rules',
                                         to=settings.AUTH_USER_MODEL, verbose_name='Reviewers'),
        ),
        migrations.AddField(
            model_name='commandfilter',
            name='applications',
            field=models.ManyToManyField(blank=True, related_name='cmd_filters', to='applications.Application',
                                         verbose_name='Application'),
        ),
        migrations.AddField(
            model_name='commandfilter',
            name='assets',
            field=models.ManyToManyField(blank=True, related_name='cmd_filters', to='assets.Asset',
                                         verbose_name='Asset'),
        ),
        migrations.AddField(
            model_name='commandfilter',
            name='nodes',
            field=models.ManyToManyField(blank=True, related_name='cmd_filters', to='assets.Node',
                                         verbose_name='Nodes'),
        ),
        migrations.AddField(
            model_name='commandfilter',
            name='system_users',
            field=models.ManyToManyField(blank=True, related_name='cmd_filters', to='assets.SystemUser',
                                         verbose_name='System user'),
        ),
        migrations.AddField(
            model_name='commandfilter',
            name='user_groups',
            field=models.ManyToManyField(blank=True, related_name='cmd_filters', to='users.UserGroup',
                                         verbose_name='User group'),
        ),
        migrations.AddField(
            model_name='commandfilter',
            name='users',
            field=models.ManyToManyField(blank=True, related_name='cmd_filters', to=settings.AUTH_USER_MODEL,
                                         verbose_name='User'),
        ),
        migrations.AddField(
            model_name='cluster',
            name='admin_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    to='assets.adminuser', verbose_name='Admin user'),
        ),
        migrations.AddField(
            model_name='authbook',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.asset',
                                    verbose_name='Asset'),
        ),
        migrations.AddField(
            model_name='authbook',
            name='systemuser',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.systemuser',
                                    verbose_name='System user'),
        ),
        migrations.AddField(
            model_name='asset',
            name='admin_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='admin_assets', to='assets.systemuser', verbose_name='Admin user'),
        ),
        migrations.AddField(
            model_name='asset',
            name='domain',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='assets', to='assets.domain', verbose_name='Domain'),
        ),
        migrations.AddField(
            model_name='asset',
            name='labels',
            field=models.ManyToManyField(blank=True, related_name='assets', to='assets.Label', verbose_name='Labels'),
        ),
        migrations.AddField(
            model_name='asset',
            name='nodes',
            field=models.ManyToManyField(default=assets.models.asset.default_node, related_name='assets',
                                         to='assets.Node', verbose_name='Nodes'),
        ),
        migrations.AddField(
            model_name='asset',
            name='platform',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assets',
                                    to='assets.platform', verbose_name='Platform'),
        ),
        migrations.AlterUniqueTogether(
            name='adminuser',
            unique_together={('name', 'org_id')},
        ),
        migrations.AddField(
            model_name='accountbackupplanexecution',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='execution',
                                    to='assets.accountbackupplan', verbose_name='Account backup plan'),
        ),
        migrations.AddField(
            model_name='accountbackupplan',
            name='recipients',
            field=models.ManyToManyField(blank=True, related_name='recipient_escape_route_plans',
                                         to=settings.AUTH_USER_MODEL, verbose_name='Recipient'),
        ),
        migrations.AlterUniqueTogether(
            name='systemuser',
            unique_together={('name', 'org_id')},
        ),
        migrations.AlterUniqueTogether(
            name='gateway',
            unique_together={('name', 'org_id')},
        ),
        migrations.AlterUniqueTogether(
            name='favoriteasset',
            unique_together={('user', 'asset')},
        ),
        migrations.AlterUniqueTogether(
            name='commandfilter',
            unique_together={('org_id', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='authbook',
            unique_together={('username', 'asset', 'systemuser')},
        ),
        migrations.AlterUniqueTogether(
            name='asset',
            unique_together={('org_id', 'hostname')},
        ),
        migrations.AlterUniqueTogether(
            name='accountbackupplan',
            unique_together={('name', 'org_id')},
        ),
    ]
